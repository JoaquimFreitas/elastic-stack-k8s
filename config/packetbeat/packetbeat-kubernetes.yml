---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: packetbeat
  namespace: pets
  labels:
    app: packetbeat
spec:
  template:
    metadata:
      labels:
        app: packetbeat
    spec:
      securityContext:
        runAsUser: 0
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: packetbeat
      containers:
      - name: packetbeat
        image: docker.elastic.co/beats/packetbeat:6.5.4
        imagePullPolicy: Always
        args: [
          "-e"
        ]
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - NET_ADMIN
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: ELASTICSEARCH_HOST
          value: "elasticsearch.default.svc.cluster.local"
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: KIBANA_HOST
          value: "kibana.default.svc.cluster.local"
        - name: KIBANA_PORT
          value: "5601"
        volumeMounts:
        - name: config
          mountPath: /usr/share/packetbeat/packetbeat.yml
          readOnly: true
          subPath: packetbeat.yml
        - name: data
          mountPath: /usr/share/packetbeat/data
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: packetbeat-config
      - name: data
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: packetbeat-config
  namespace: pets
  labels:
    app: packetbeat
data:
  packetbeat.yml: |-
    
    packetbeat.interfaces.device: any

    packetbeat.protocols:
    - type: dns
      ports: [53]
      include_authorities: true
      include_additionals: true

    - type: http
      ports: [9200, 9300, 9600, 5000, 5555, 5601, 8200, 8081, 8082]
      hide_keywords: ["pass", "password", "passwd"]
      send_headers: ["User-Agent", "Cookie", "Set-Cookie"]
      split_cookie: true
      real_ip_header: "X-Forwarded-For"

    processors:
      - add_cloud_metadata: ~
      - add_host_metadata: ~
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
          indexers:
          - ip_port:
          matchers:
          - field_format:
              format: '%{[ip]}:%{[port]}'

    output:
      elasticsearch:
        hosts: ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]

    setup:
      kibana:
        host: "${KIBANA_HOST}:${KIBANA_PORT}"
      dashboards:
        enabled: true
        index: "packetbeat-*"
        retry:
          enabled: true
          interval: 30
      template:
        enabled: true

    pack.monitoring.enabled: true
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: packetbeat
subjects:
- kind: ServiceAccount
  name: packetbeat
  namespace: pets
roleRef:
  kind: ClusterRole
  name: packetbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: packetbeat
  labels:
    app: packetbeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: packetbeat
  labels:
    app: packetbeat